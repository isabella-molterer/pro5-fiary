security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
          App\Entity\User: bcrypt
    providers:
        my_provider:
                  entity:
                    class: App\Entity\User
                    property: username

        in_memory:
          memory:
            users:
              admin:
                password: geheim
                roles: 'ROLE_ADMIN'

    role_hierarchy:
      ROLE_USER:       ROLE_USER
      ROLE_REGISTERED: [ROLE_REGISTERED, ROLE_USER]
      ROLE_ADMIN:      [ROLE_REGISTERED, ROLE_ADMIN]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:

            pattern: ^/
            anonymous: true

            form_login:
              login_path: login
              check_path: login
              provider: my_provider
            # target_path_parameter: go_to
            # failure_path_parameter: back_to

            logout: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        # - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/, roles: ROLE_USER }
